version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: glenridescraper
    restart: unless-stopped
    ports:
      - '${PORT:-3000}:3000'
    volumes:
      - ./data:/app/data  # Persist data between container restarts
      - ./searches.db:/app/searches.db  # Persist SQLite database
    environment:
      - NODE_ENV=production
      - PORT=3000
      # Environment variables from .env will be automatically loaded by dotenv
      - NODE_OPTIONS=--max_old_space_size=2048
    env_file:
      - .env
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    healthcheck:
      test: ["CMD", "wget", "--spider", "--no-check-certificate", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Uncomment the following section when setting up with Traefik
  # traefik:
  #   image: traefik:v2.10
  #   container_name: traefik
  #   command:
  #     - "--providers.docker=true"
  #     - "--providers.docker.exposedbydefault=false"
  #     - "--entrypoints.web.address=:80"
  #     - "--entrypoints.websecure.address=:443"
  #     - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
  #     - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
  #     - "--certificatesresolvers.myresolver.acme.email=your-email@example.com"
  #     - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - ./letsencrypt:/letsencrypt

# Volumes for data persistence
volumes:
  data:
    driver: local
